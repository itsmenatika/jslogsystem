import { actualCrash, assertConsole, blankCallback, blockLogs, clearConsole, combineColors, commandCompound, commandDividerInternal, commandList, commands, consoleColor, consoleColors, consoleColorsMulti, consoleMultiWrite, consolePairWrite, consoleUltraRawWrite, consoleWrite, counterCount, counterCountReset, formatError, formatTaskError, generateAnsiColor, getCurrentVersionOfLogSystem, getLegacyInformation, globalEval, hideCursor, isCommandRegistered, keepProcessAlive, legacyDataType, log, logGroup, logGroupEnd, logNode, logSystemError, logTimeEnd, logTimeStamp, logTimeStart, LogType, multiCommandRegister, multiDisplayer, multiLineConstructor, newConsole, pipeDividerInternal, pipeExecutor, printViewTextbox, registerCommand, registerCommandLegacy, registerCommandLegacyForceUse, registerCommandShort, removeCommand, replaceConsole, setLegacyInformation, showCursor, smartArgs, smartArgumentList, useWith, validateLegacyProperty } from "./logSystem.js";

// exports
export {LogType, log, formatError,
    clearConsole, consoleWrite, assertConsole,  consoleColors,
    blockLogs,
    registerCommand, removeCommand, commandList, isCommandRegistered,
    counterCount, counterCountReset,
    newConsole as console,
    newConsole,
    blankCallback, logSystemError, commands,
    useWith, useWith as uw,
    formatTaskError as fte, formatTaskError,
    logNode,
    actualCrash,
    globalEval,
    replaceConsole,
    keepProcessAlive,
    showCursor,
    hideCursor,
    consoleColorsMulti,
    consoleColor,
    consoleMultiWrite,
    multiDisplayer,
    getCurrentVersionOfLogSystem,
    registerCommandLegacy,
    registerCommandLegacyForceUse,
    multiCommandRegister,
    commandCompound,
    registerCommandShort,
    combineColors,
    legacyDataType,
    validateLegacyProperty,
    setLegacyInformation,
    getLegacyInformation,
    logGroup as group,
    logGroup,
    logGroupEnd as groupEnd,
    logGroupEnd,
    logGroup as groupCollapsed,
    logTimeStart as time,
    logTimeStart,
    logTimeEnd as timeEnd,
    logTimeEnd,
    logTimeStamp as timeStamp,
    logTimeStamp,
    // internalPipeDivider
    pipeDividerInternal,
    commandDividerInternal,
    pipeExecutor,
    consoleUltraRawWrite,
    multiLineConstructor,

    smartArgs,
    smartArgumentList,
    generateAnsiColor,
    consolePairWrite,
    printViewTextbox
}