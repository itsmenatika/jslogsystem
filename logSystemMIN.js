var LogType,specialTypes,pipeType,consoleColors;import{execSync as e,fork as o}from"node:child_process";import{appendFileSync as t,existsSync as s,mkdirSync as n,readdirSync as i,readFileSync as r,renameSync as a,unlinkSync as l,writeFileSync as c}from"node:fs";import u from"node:os";import{join as d}from"node:path";import{inspect as g,stripVTControlCharacters as m}from"node:util";let workingDirectory=d(__dirname,"dev"),LOGDIRECTORY=d(workingDirectory,"logs"),LATESTLOGNAME="latest.txt",getversionInfoData=()=>"meow:3",getMoreStartInformation=()=>{let e=new Date;return`----------------
LOGS FROM ${e.toISOString()} UTC TIME ${e.getHours()}:${e.getMinutes()}:${e.getSeconds()}
`},saveTheLatest=(e,o)=>{a(o,d(LOGDIRECTORY,`${e.getFullYear()}.${e.getMonth()}.${e.getDate()}-${e.getHours()}.${e.getMinutes()}.${e.getSeconds()}.txt`))},viewTextBox=!0,blockLogsVar=!1,singleLogGroupText="┄┅",lastLogGroupText="░",useAddToGlobalAs=!1,addToGlobalAs=["newConsole"],quickHello=!1;s(workingDirectory)||n(workingDirectory),workingDirectory&&process.chdir(workingDirectory),function(e){e[e.INFO=0]="INFO",e[e.INFORMATION=0]="INFORMATION",e[e.ERROR=1]="ERROR",e[e.ERR=1]="ERR",e[e.WARNING=2]="WARNING",e[e.WAR=2]="WAR",e[e.SUCCESS=3]="SUCCESS",e[e.SUCC=3]="SUCC",e[e.SUC=3]="SUC",e[e.INITIALIZATION=4]="INITIALIZATION",e[e.INIT=4]="INIT",e[e.INT=4]="INT",e[e.CRASH=5]="CRASH",e[e.COUNTER=6]="COUNTER",e[e.GROUP=7]="GROUP"}(LogType||(LogType={}));let commandHistory=[],indexCommandHistory=null,logSystemVer="1.2",currentUpTime=Date.now(),currentGroupString="",logGroups=[],timers={};class logSystemError extends Error{}process.stdin.setRawMode(!0),process.stdin.resume(),process.stdin.setEncoding("utf-8"),s(LOGDIRECTORY)||n(LOGDIRECTORY,{recursive:!0});let finalLatest=d(LOGDIRECTORY,"latest.txt"),tempFinal=d(LOGDIRECTORY,"temp");if(s(finalLatest)){if(!s(tempFinal))throw new logSystemError("Error with moving the previous log!");let h=r(tempFinal).toString(),p=h.split("\n"),f=new Date(Number(String(p[0])));saveTheLatest(f,finalLatest),l(tempFinal)}c(tempFinal,`${Date.now()}
`),c(finalLatest,getMoreStartInformation()),t(finalLatest,"----------------\n");let text="",relativePos=0,allowedKeysToWrite="abcdefghijklmnopqrstuxwvyzABCDEFGHIJKLMNOPQRSTUXWVYZ1234567890!@#$%^*()`~-_+\\|'\";:,<.>?[{}] !@#$%^&*=~`'/";function hideCursor(){process.stdout.write("\x1b[?25l")}function showCursor(){process.stdout.write("\x1b[?25h")}viewTextBox&&process.stdout.write("> \x1b[35m"+text),process.stdin.on("data",async e=>{if(e){if("\x03"===e&&interupHandler("CTRL + C"),viewTextBox||(viewTextBox=!0,process.stdout.write("\x1b[0m> \x1b[35m")),e.includes("\b")){if(0!==relativePos){if(-1*relativePos>=text.length)return;text=text.slice(0,text.length+relativePos-1)+text.slice(text.length+relativePos,text.length),hideCursor(),process.stdout.clearLine(0),process.stdout.write("\r"),printViewTextbox(),process.stdout.moveCursor(relativePos,0),showCursor();return}text.length>0&&process.stdout.write("\b \b"),text=text.slice(0,-1)}else if(e.includes("\r")){relativePos=0,indexCommandHistory=null,process.stdout.write("\n"),t(finalLatest,"> "+text+"\n");let o=text;text="",process.stdout.write("\x1b[0m"),handleEnter(o)}else if("\x1b[A"==e)relativePos=0,null===indexCommandHistory?indexCommandHistory=commandHistory.length-1:--indexCommandHistory<0&&(indexCommandHistory=0),commandHistory.length>0&&(text=commandHistory[indexCommandHistory],hideCursor(),process.stdout.clearLine(0),process.stdout.write("\r\x1b[0m> \x1b[35m"+text),showCursor());else if("\x1b[B"==e)relativePos=0,null!==indexCommandHistory&&(++indexCommandHistory>=commandHistory.length&&(indexCommandHistory=null),text=null!==indexCommandHistory?commandHistory[indexCommandHistory]:"",hideCursor(),process.stdout.clearLine(0),process.stdout.write("\r\x1b[0m> \x1b[35m"+text),showCursor());else if("\x1b[D"===e){if(-1*relativePos>=text.length)return;process.stdout.moveCursor(-1,0),relativePos--}else if("\x1b[C"===e){if(relativePos>=0)return;process.stdout.moveCursor(1,0),relativePos++}else if("abcdefghijklmnopqrstuxwvyzABCDEFGHIJKLMNOPQRSTUXWVYZ1234567890!@#$%^*()`~-_+\\|'\";:,<.>?[{}] !@#$%^&*=~`'/".includes(e)){if(0!==relativePos){text=text.slice(0,relativePos)+e+text.slice(relativePos),hideCursor(),process.stdout.write("\r"),printViewTextbox(),process.stdout.moveCursor(relativePos,0),showCursor();return}text+=e,process.stdout.write(e)}}});let blankCallback=e=>!1;function isCommandAlias(e){return"object"==typeof e&&!0==e.isAlias&&"string"==typeof e.aliasName}let bindInfo={},commands={exit:{usageinfo:"exit <exit code...>",desc:"allows you to stop the process",longdesc:"It will execute process.exit(exitcode) that will cause the whole process to cease to exist. Your work may be lost. But sometimes it's the only easy way to close your program. If you want to safe close, consider using safeexit/sexit (though it requires setting the handler by the app before!).",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=e.slice(1).filter(e=>"-t"!=e).join(" ").trim();return o=o||0,textboxVisibility(!1),actualCrash("The execution was manually stopped by EXIT COMMAND with code: "+o,"core",-1),!1}},crash:{isAlias:!0,aliasName:"exit",hidden:!0,changeable:!1},stop:{isAlias:!0,aliasName:"exit",hidden:!0,changeable:!1},halt:{isAlias:!0,aliasName:"exit",hidden:!0,changeable:!1},clear:{usageinfo:"clear",desc:"clears the whole screen",longdesc:"It clears the whole screen using clearConsole(). Aliases: cls",hidden:!1,changeable:!1,isAlias:!1,callback:e=>(clearConsole(),onlyToRedirect(!0))},cls:{isAlias:!0,aliasName:"clear",hidden:!0,changeable:!1},write:{usageinfo:"write <data>",desc:"allows you to print raw characters on the screen",longdesc:"It prints the characters into the screen",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o="";for(let t of e.slice(1))"-t"!==t&&(o+=t+" ");return o.slice(0,-1)}},wrt:{isAlias:!0,aliasName:"write",hidden:!0,changeable:!1},echo:{usageinfo:"echo <data>",desc:"allows you to print on the screen with special characters",longdesc:"It prints the characters into the screen. It supports \\n\n\nThe alternative command is `write` that does not support special characters",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o="";for(let t of e.slice(1))"-t"!==t&&(o+=t+" ");let s=o.slice(0,-1);return s.replaceAll("\\\\","%SLASH%").replaceAll("\\n","\n").replaceAll("%SLASH%","\\")}},ech:{isAlias:!0,aliasName:"echo",hidden:!0,changeable:!1},directory:{usageinfo:"directory <data>",desc:"changes the working directory",longdesc:"It prints the characters into the screen. It supports \\n\n\nThe alternative command is `write` that does not support special characters",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o="";for(let t of e.slice(1))"-t"!==t&&(o+=t+" ");let s=o.slice(0,-1);if(""==s)return process.cwd();let n=d(process.cwd(),s);return process.chdir(n),n}},cd:{isAlias:!0,aliasName:"directory",hidden:!0,changeable:!1},cwd:{isAlias:!0,aliasName:"directory",hidden:!0,changeable:!1},pwd:{isAlias:!0,aliasName:"directory",hidden:!0,changeable:!1},hide:{usageinfo:"hide",desc:"hides the textbox that allows you to write",longdesc:"It hides the textbox that shows what you are writting. It also displays the message about what has happened.\nThe message is as follows: \n\nThe textbox was hidden. Start writting to make it appear again!\n\nuse: `hide -h` to remove the message",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=!0;return e.includes("-h")&&(o=!1),o&&consoleWrite("The textbox was hidden. Start writting to make it appear again!\n",void 0,void 0,""),textboxVisibility(!1),onlyToRedirect(!0)}},h:{isAlias:!0,aliasName:"hide",hidden:!0,changeable:!1},logs:{usageinfo:"logs [<-d [...names]|-a>]",desc:"allows you to manage logs",longdesc:"It allows you to delete or view the list of logs.\n\nUse 'logs' to list all the logs.\nUse 'logs -d name...name...name' to delete certain logs.\nUse 'logs -d -a' to delete all logs.\nUse 'logs name' to view the content of that log.",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=smartArgs(e),t=new multiDisplayer;if(0===o.length){let n=i(LOGDIRECTORY);for(let a of n)"temp"!==a&&(t.push("* ",consoleColors.FgYellow),a.endsWith(".txt")&&(a=a.slice(0,-4)),t.push(a,consoleColors.FgWhite),t.push("\n"))}else if(1===o.length){let c=d(LOGDIRECTORY,o.args[0]),u;s(c)?(u=r(c),o.isEnding&&(t.push("CONTENT OF "+c,combineColors(consoleColors.BgMagenta,consoleColors.FgWhite)),t.push("\n")),t.push(String(u)),o.isEnding&&(t.push("CONTENT OF "+c,combineColors(consoleColors.BgMagenta,consoleColors.FgWhite)),t.push("\n"))):s(c+".txt")?(u=r(c+".txt"),o.isEnding&&(t.push("CONTENT OF "+c+".txt",combineColors(consoleColors.BgMagenta,consoleColors.FgWhite)),t.push("\n")),t.push(String(u)),o.isEnding&&(t.push("CONTENT OF "+c+".txt",combineColors(consoleColors.BgMagenta,consoleColors.FgWhite)),t.push("\n"))):(t.push(c,consoleColors.FgWhite),t.push(" NOT FOUND",consoleColors.FgRed),o.isEnding&&t.push("\n"))}else if(o.args.includes("-d")&&o.args.includes("-a")){let g=i(LOGDIRECTORY).filter(e=>"latest.txt"!==e&&"temp"!==e);for(let m of g)t.push("* ",consoleColors.FgYellow),t.push(m,consoleColors.FgWhite),l(d(LOGDIRECTORY,m)),t.push(" DELETED \n");t.push("\n"),t.push(`${g.length}/${g.length+1} DELETED`,consoleColors.BgMagenta),t.push("\n")}else if(o.args.includes("-d")){let h=o.args.filter(e=>"-d"!==e),p=0;for(let f of h){let y=d(LOGDIRECTORY,f);s(y)?(l(y),t.push("* ",consoleColors.FgYellow),t.push(y,consoleColors.FgWhite),t.push(" DELETED \n"),p++):s(y+".txt")?(l(y+".txt"),t.push("* ",consoleColors.FgYellow),t.push(y,consoleColors.FgWhite),t.push(" DELETED \n"),p++):(t.push("* ",consoleColors.FgYellow),t.push(y,consoleColors.FgWhite),t.push(" NOT FOUND \n")),t.push("\n"),t.push(`${p}/${h.length} DELETED`,consoleColors.BgMagenta),t.push("\n")}}return o.isEnding&&t.useConsoleWrite(),onlyToRedirect(t.toRawString())}},inspect:{usageinfo:"inspect <structure>",desc:"allows you to inspect a javascript structure (DEPRECATED?)",longdesc:"it uses internal node.js inspect and JSON parser to allow you to inspect the structure (all objects at the end of the command chain, are now inspected by default and that's why it's deprecated(?). COMMAND MAY BE REMOVED IN THE FUTURE AS IT NOW SERVES NO PURPOSE OTHER THAN FORCING THAT IN THE CHAIN WITH -t!). It can be used to convert JSON strings to objects (it's recommended to use toJSON though!).",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=smartArgs(e),t,s=o.args.map(e=>{if("string"!=typeof e)return e;try{return JSON.parse(e)}catch(o){return e}});if(t=0===s.length?void 0:1===s.length?s[0]:s,1===o.length){if("string"==typeof o.args[0]){let n;try{n=JSON.parse(o.args[0])}catch(i){t=o.args[0]}}else t=o.args[0]}else t=o.args;return g(t,!0,null,o.isEnding)}},insp:{isAlias:!0,aliasName:"inspect",hidden:!0,changeable:!1},arguments:{usageinfo:"arguments",desc:"allows you to see all arguments that got passed into that command",longdesc:"allows you to see all arguments that got passed into that command",hidden:!1,changeable:!1,isAlias:!1,callback:e=>e},args:{isAlias:!0,aliasName:"arguments",hidden:!0,changeable:!1},argumentslength:{usageinfo:"arguments",desc:"allows you to see the number of arguments that got passed into that command",longdesc:"allows you to see the number of arguments that got passed into that command",hidden:!1,changeable:!1,isAlias:!1,callback:e=>e.length},argslen:{isAlias:!0,aliasName:"argumentslength",hidden:!0,changeable:!1},arglen:{isAlias:!0,aliasName:"argumentslength",hidden:!0,changeable:!1},string:{usageinfo:"string <data>",desc:"forces the input to become a string if possible",longdesc:"uses javascript String() or toString() on provided things and returns it. It Ignores internal arguments like -t",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=smartArgs(e),t=[];for(let s of o)t.push(String(s));if(0!==t.length)return 1===t.length?t[0]:t}},str:{isAlias:!0,aliasName:"string",hidden:!0,changeable:!1},eval:{usageinfo:"eval <code...>",desc:"allows you to execute javascript",longdesc:"it executes javascript using globalEval which means that the context is global. $newConsole exposes newConsole api regardles of the config!",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o="";for(let t of e.slice(1))"-t"!==t&&(o+=t+" ");let s=o.trim(),n=new logNode("eval"),i;return newConsole.useWith("using eval",()=>{let e=globalThis.$newConsole;globalThis.$newConsole=newConsole,i=globalEval(s),globalThis.$newConsole=e},n),i}},e:{isAlias:!0,aliasName:"eval",hidden:!0,changeable:!1},js:{isAlias:!0,aliasName:"eval",hidden:!0,changeable:!1},javascript:{isAlias:!0,aliasName:"eval",hidden:!0,changeable:!1},version:{usageinfo:"version [-i] [-s] [-u]",desc:"shows the version information",longdesc:multiLineConstructor("shows the version information","","use -i to get int version","use -s to get string version","use -u to get user set version data","","if piped it uses 'version -i' by default"),hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=smartArgs(e),t={};o.dashCombined.includes("i")&&(t.int=getCurrentVersionOfLogSystem("number")),o.dashCombined.includes("s")&&(t.str=getCurrentVersionOfLogSystem("string")),o.dashCombined.includes("u")&&(t.user=getversionInfoData());let s=Object.keys(t).length;if(1===s)return t[Object.keys(t)[0]];if(s>1)return t;if(o.isEnding){let n=textboxVisibility();textboxVisibility(!1),consoleWrite("logSystemVer: ",void 0,void 0,""),consoleWrite("1.2",consoleColors.BgCyan,void 0,""),consoleWrite(" by naticzka",[consoleColors.FgMagenta,consoleColors.Blink]),consoleWrite(getversionInfoData(),consoleColors.BgGray),textboxVisibility(n);return}return onlyToRedirect(getCurrentVersionOfLogSystem("number"))}},ver:{isAlias:!0,aliasName:"version",hidden:!0,changeable:!1},v:{isAlias:!0,aliasName:"version",hidden:!0,changeable:!0},cmd:{usageinfo:"cmd <code...>",desc:"executes system commands",longdesc:"It allows you to execute system command using execSync()",hidden:!1,changeable:!1,isAlias:!1,callback(o){let t="";for(let s of o.slice(1))"-t"!==s&&(t+=s+" ");let n=t.trim(),i=new logNode("cmd"),r,a="win32"===process.platform,l=a?"chcp 65001 > nul && "+n:n;return newConsole.useWith("using cmd",()=>{r=e(l,{shell:a?"cmd.exe":"/bin/bash"})},i),r}},"cmd.exe":{isAlias:!0,aliasName:"cmd",hidden:!0,changeable:!1},sys:{isAlias:!0,aliasName:"cmd",hidden:!0,changeable:!1},execute:{isAlias:!0,aliasName:"cmd",hidden:!0,changeable:!1},uptime:{usageinfo:"uptime",desc:"shows the time since the program start.",longdesc:multiLineConstructor("shows the time since the program start.","","","use -e to get miliseconds since epoch","use -x to extract miliseconds (max 1000)","use -s to extract seconds (max 60)","use -m to extract minutes (max 60)","use -h to extract hours (max 24)","use -d to extract days"),hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=smartArgs(e),t=Date.now()-currentUpTime,s=t%1e3,n=Math.floor(t/1e3%60),i=Math.floor(t/1e3/60%60),r=Math.floor(t/1e3/60/60%24),a=Math.floor(t/1e3/60/60/24),l={};if(o.dashCombined.includes("e")&&(l.sinceEpoch=t),o.dashCombined.includes("x")&&(l.miliseconds=s),o.dashCombined.includes("m")&&(l.minutes=i),o.dashCombined.includes("s")&&(l.seconds=n),o.dashCombined.includes("h")&&(l.hours=r),o.dashCombined.includes("d")&&(l.days=a),0!=o.dashCombined.length){let c=Object.keys(l).length;if(1===c)return l[Object.keys(l)[0]];if(c>1)return l}return`current uptime: ${a}d ${r}h ${i}m ${n}s ${s}ms (since epoch: ${t})`}},reload:{usageinfo:"reload",desc:"restarts the process (It doesnt work properly)",longdesc:'restarts the process (It doesnt work properly) using processRestart() (fork(join(__dirname, __filename), {stdio: "overlapped"});)',hidden:!1,changeable:!1,isAlias:!1,callback:e=>(log(LogType.INFO,"restarting the process..."),processRestart(),!1)},r:{isAlias:!0,aliasName:"reload",hidden:!0,changeable:!1},up:{isAlias:!0,aliasName:"uptime",hidden:!0},upt:{isAlias:!0,aliasName:"uptime",hidden:!0,changeable:!1},bind:{usageinfo:"bind [`<executor>`:`<commands...;>`]",desc:"allows you to set binds or list them",longdesc:"If it's used without parameters, then it will print the list of binds.\n\nUsing parameters will result in changing those binds\n\nTo add a new bind use: 'bind `<executor>`:`<commands...;>`'.\nThe example: 'bind `meow`:`echo meow!`'\n\nIt's also possible to set more than one command using ; as the seperator.\n\nTo remove bind use: 'bind `<executor>`:``",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=removeInternalArguments(e),t=e.includes("-t");if(1===o.length){let s=new multiDisplayer;for(let[n,i]of(t&&(s.push("bind list",combineColors(consoleColors.BgMagenta,consoleColors.FgBlack)),s.push("\n")),Object.entries(bindInfo)))s.push("* ",consoleColors.FgYellow),s.push(i.executor,consoleColors.FgRed),s.push(" -> ",consoleColors.FgGray),s.push(i.command.toString()+"\n",consoleColors.FgBlue);return t&&s.useConsoleWrite(),onlyToRedirect(Object.entries(bindInfo))}let r=o.slice(1).join(" ");if("`"!=r[0]){let a=r;if(a in bindInfo){let l=new multiDisplayer;return t&&(l.push(`bind '${a}'`,combineColors(consoleColors.BgMagenta,consoleColors.FgBlack)),l.push("\n")),l.push(`\`${bindInfo[a].executor}\`:\`${bindInfo[a].command.toString()}\``),t&&(l.push("\n"),l.useConsoleWrite()),onlyToRedirect(l.toRawString())}return log(LogType.ERROR,"invalid syntax","console.bind"),onlyToRedirect(!1)}let c=2;for(;;){let u=r[c];if(!u||"`"==u)break;c++}let d=r.slice(1,c);if(0===d.length||"`"!=r[c]||":"!=r[c+1]||"`"!=r[c+2])return log(LogType.ERROR,"invalid syntax","console.bind"),onlyToRedirect(!1);let g=d.split(" ")[0],m=c+4;for(;;){let h=r[m];if(!h||"`"==h)break;m++}if(c+4===m)return delete bindInfo[g],log(LogType.SUCCESS,"the bind has been removed!","console.bind"),onlyToRedirect(!1);let p=r.slice(c+3,m);return 0===p.length?(delete bindInfo[g],log(LogType.SUCCESS,"the bind was removed!","console.bind"),onlyToRedirect(!1)):(bindInfo[g]={name:g,command:p.trim(),executor:d},log(LogType.SUCCESS,`the bind was set: \`${bindInfo[g].executor}\`:\`${bindInfo[g].command.toString()}\``,"console.bind"),onlyToRedirect(!0))}},b:{isAlias:!0,aliasName:"bind",hidden:!0,changeable:!1},meow:{usageinfo:"meow <?>",desc:"meows",longdesc:"it really just meows~~",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=new multiDisplayer;return o.push("  /\\_/\\  (\n"),o.push(" ( ^.^ ) _)\n"),o.push('   \\"/  (        '),o.push("MEOW!\n",consoleColors.Blink),o.push(" ( | | )\n"),o.push("(__d b__)\n"),(e.includes("-t")||!legacyData.pipes)&&o.useConsoleWrite(void 0,!1),onlyToRedirect(o.toRawString())}},"meow~":{isAlias:!0,aliasName:"meow",hidden:!0,changeable:!1},"miau~":{isAlias:!0,aliasName:"meow",hidden:!0,changeable:!1},miau:{isAlias:!0,aliasName:"meow",hidden:!0,changeable:!1},info:{usageinfo:"info",desc:"prints information about the system",longdesc:"it really just prints information about the system!",hidden:!1,changeable:!1,isAlias:!1,callback(e){let o=new multiDisplayer;o.push("_______________",consoleColors.BgYellow+consoleColors.FgYellow),o.push("\n");let t=process.memoryUsage(),s=[["architecture",u.arch],["host name",u.hostname],["platform",u.platform],["kernel version",u.version],["process priority",u.getPriority()],["machine",u.machine],["cwd",process.cwd()],["heap total",Math.round(t.heapTotal/1e5)/10+"mb"],["heap used",Math.round(t.heapUsed/1e5)/10+"mb"],["cpu usage (1m, 5m, 15m)",`${u.loadavg().map(e=>`${100*e}%`)}`]],n=u.cpus(),i=0;for(let r of n)s.push([`cpu ${i}`,`${r.model} (speed: ${r.speed})`]),i++;for(let a of s)o.push("	"+a[0]+": ",consoleColors.FgGray),o.push(a[1],consoleColors.BgRed),o.push("\n");return o.push("_______________",consoleColors.BgYellow+consoleColors.FgYellow),o.push("\n"),o.useConsoleWrite(),onlyToRedirect(o.toRawString())}},sysinfo:{isAlias:!0,aliasName:"info",hidden:!0,changeable:!1},sysinf:{isAlias:!0,aliasName:"info",hidden:!0,changeable:!1},inf:{isAlias:!0,aliasName:"info",hidden:!0,changeable:!1},nil:{usageinfo:"nil",desc:"it outputs literally nothing (eats the whole input and does nothing)",longdesc:"it outputs literally nothing (eats the whole input and does nothing. It can be useful if you want to block the result from showing up on unsupported commands",hidden:!1,changeable:!1,callback(e){}},true:{usageinfo:"true",desc:"outputs true",longdesc:"outputs true",hidden:!1,changeable:!1,callback:e=>!0},True:{isAlias:!0,aliasName:"true",hidden:!0,changeable:!1},false:{usageinfo:"true",desc:"outputs false",longdesc:"outputs false",hidden:!1,changeable:!1,callback:e=>!1},False:{isAlias:!0,aliasName:"false",hidden:!0,changeable:!1},number:{usageinfo:"num [...<number>]",desc:"creates a number",longdesc:"creates a number from provided numbers. If multiple ones are provided, all of them are summed. It supports negative numbers with ! or - as prefix. ",hidden:!1,changeable:!1,callback(e){let o=smartArgs(e),t=0;for(let s of o.args)"!"===s[0]?t+=-Number(s.slice(1)):t+=Number(s);return t}},num:{isAlias:!0,aliasName:"number",hidden:!0,changeable:!1},sum:{isAlias:!0,aliasName:"number",hidden:!0,changeable:!1},exists:{usageinfo:"exists [-b/-c] <command|bind>",desc:"checks whether the bind or command exist",longdesc:"checks whether a bind or a command exist\n\n* exists -c <command> - checks for a command\n* exists -b <bind> - checks for a bind\n* exists -b -c <command|bind> - checks for either bind or command.\n\nYou can combine arguments into a single -, writting '-bc'/'-cb' instead of '-b -c'",hidden:!1,changeable:!1,callback(e){let o=smartArgs(e);if(1!=o.argsWithoutDash.length)return explicitUndefined();let t=!1;return o.dashCombined.includes("b")&&(t||=Object.hasOwn(bindInfo,o.argsWithoutDash[0])),o.dashCombined.includes("c")&&(t||=Object.hasOwn(commands,o.argsWithoutDash[0])),t}},"?":{isAlias:!0,aliasName:"help",hidden:!0,changeable:!1},help:{usageinfo:"help [<about>]",desc:"shows the list of commands or describes the command usage",longdesc:"Provides the long description and command usage of provided command and if not specified shows the list of commands.",hidden:!1,changeable:!1,callback(e){let o=smartArgs(e);if(0===o.length){let t=[],s=[];for(let[n,i]of Object.entries(commands))if(!i.hidden){if(t.push("* "),s.push(consoleColors.FgYellow),t.push(n),s.push(consoleColors.FgWhite),t.push(" -> "),s.push(consoleColors.FgMagenta),isCommandAlias(i))t.push(`alias for ${i.aliasName}
`),s.push(consoleColors.FgGray);else{let r=i.desc?i.desc+"\n":"no description specified\n";t.push(r),s.push(consoleColors.FgWhite)}}return o.isEnding&&consoleMultiWrite(t,s),onlyToRedirect(t.join(""))}if(1==o.length){let a=new multiDisplayer,l=o.args[0];if(l in commands){let c=commands[l],u,d;c.isAlias?(d=c.aliasName,u=commands[c.aliasName]):(u=c,d=l),a.push("_______________",consoleColors.BgYellow+consoleColors.FgYellow),a.push("\n"),a.push(" "+u.usageinfo+"\n\n",consoleColors.FgCyan),a.push("aliases: ",consoleColors.FgGray),a.push(getAliases(d).join(", ")+"\n",consoleColors.FgWhite),a.push("hidden: ",consoleColors.FgGray),a.push(String(u.hidden)+"\n",consoleColors.FgWhite),a.push("changable: ",consoleColors.FgGray),a.push(String(u.changeable)+"\n",consoleColors.FgWhite),a.push("short desc: ",consoleColors.FgGray);let g="desc"in u?u.desc:"no description specified";a.push(g+"\n",consoleColors.FgWhite),a.push("long desc: ",consoleColors.FgGray),a.push(u.longdesc+"\n",consoleColors.FgWhite),a.push("_______________",consoleColors.BgYellow+consoleColors.FgYellow),a.push("\n")}else a.push("There's no reference to ",consoleColors.FgRed),a.push(l,consoleColors.FgYellow),a.push(" in any list!\n",consoleColors.FgRed);return o.isEnding&&a.useConsoleWrite(),onlyToRedirect(a.toRawString())}return onlyToRedirect(!1)}}};function isCommandRegistered(e){return Object.hasOwn(commands,e)}function commandList(){return Object.keys(commands)}function removeCommand(e){if(!Object.hasOwn(commands,e))throw new logSystemError(`The command '${e}' doesn't exist!`);delete commands[e]}function registerCommandShort(e,o=!1){if(legacyData.registerMode<=1.13)throw new logSystemError("Legacy: registerMode has to be at least 1.14");registerCommand(e.name,e.data,o)}function multiCommandRegister(e,o=!1){if(legacyData.registerMode<=1.13)throw new logSystemError("Legacy: registerMode has to be at least 1.14");for(let t of e)registerCommand(t.name,t.data,o)}function registerCommand(e,o,t=!1){if(Object.hasOwn(commands,e)){if(!t)throw new logSystemError(`The command '${e}' does exist!`);if(!commands[e].changeable)throw new logSystemError(`The command '${e}' is not changeable!`)}if(!o.isAlias&&!o.callback)throw new logSystemError("The callback must be set for no alias.");if(delete aliasCache[e],o.aliasName&&delete aliasCache[o.aliasName],o.isAlias){commands[e]={usageinfo:void 0,desc:void 0,longdesc:void 0,hidden:"boolean"!=typeof o.hidden||o.hidden,changeable:"boolean"!=typeof o.changeable||o.changeable,isAlias:!0,aliasName:o.aliasName,callback:void 0,async:void 0};return}commands[e]={usageinfo:o.usageinfo?o.usageinfo:`${e} [<arguments...>] ~(usage not specified)`,desc:o.desc?o.desc:"no description",longdesc:o.longdesc?o.longdesc:"no long description",hidden:"boolean"==typeof o.hidden&&o.hidden,changeable:"boolean"!=typeof o.changeable||o.changeable,isAlias:!1,aliasName:void 0,callback:o.callback,async:"boolean"==typeof o.async&&o.async}}let __registerCommand=registerCommand,legacyData={initialized:!1,currentVersion:getCurrentVersionOfLogSystem("number"),registerMode:getCurrentVersionOfLogSystem("number"),noSpecialArguments:!1,pipes:!0};function getLegacyInformation(){return{...legacyData}}function validateLegacyProperty(e,o){switch(e){case"initialized":case"currentVersion":return!1;case"registerMode":return"number"==typeof o;case"noSpecialArguments":case"pipes":return"boolean"==typeof o;default:throw Error("not existing property!")}}function setLegacyInformation(e,o,t=!1){if(legacyData.initialized&&!t)throw new logSystemError("Legacy: you can't change legacy data after intialization!");if(!Object.hasOwn(legacyData,e))throw new logSystemError("Legacy: that property name does not exist!");if(!validateLegacyProperty(e,o))throw new logSystemError("Legacy: You can't set that value to that property!");log(LogType.INFO,`'${e}' was changed to '${o}'!`,"legacy"),legacyCheckForWarningAndErrors(e,o),legacyData[e]=o}function legacyCheckForWarningAndErrors(e,o){"noSpecialArguments"===e&&log(LogType.WARNING,"NOTE: noSpecialArguments may cause other commands to not work correctly as they may depend on -t to render better view and not check for legacy settings! Some internal commands may also see errors. Pipping may be drastically affected. Disable that setting unless you necessarly need that. Consider disabling pipes by settings them to false instead of that option or with that option!","legacy")}function registerCommandLegacy(e,o,t,s,n){__registerCommand(e,{usageinfo:o,desc:t,longdesc:s,hidden:!1,changeable:!1,isAlias:!1,callback:n})}function registerCommandLegacyForceUse(){if(1==legacyData.registerMode)throw new logSystemError("The system already use it");registerCommand=registerCommandLegacy,legacyData.registerMode=1}async function commandExec(e,o={}){commandInternalExec(e,o.silent,o.logNode)}let commandInterface={isCommandRegistered,commandList,removeCommand,registerCommand,registerCommandLegacy,registerCommandLegacyForceUse,registerCommandShort,multiCommandRegister,commandExec,exec:commandExec};function handleEnter(e,o=!1){if(""==e.trim()){textboxVisibility()&&printViewTextbox();return}commandHistory.length>50&&(commandHistory=commandHistory.slice(commandHistory.length-50,commandHistory.length)),commandHistory.push(e),commandInternalExec(e)}function onlyToRedirect(e){return{__$special:specialTypes.redirection,val:e}}function isControlType(e){return"object"==typeof e&&"__$special"in e}function isOnlyToRedirect(e){return"object"==typeof e&&"__$special"in e&&e.__$special===specialTypes.redirection}function isPipeHalt(e){return"object"==typeof e&&"__$special"in e&&e.__$special===specialTypes.pipeExecutorHalt}function pipeHalt(){return{__$special:specialTypes.pipeExecutorHalt}}function explicitUndefined(){return{__$special:specialTypes.explicitUndefined}}function isExplicitUndefined(e){return"object"==typeof e&&"__$special"in e&&e.__$special===specialTypes.explicitUndefined}function removeInternalArguments(e){return e.filter(e=>!("string"==typeof e&&e in internalArgsList))}!function(e){e[e.null=0]="null",e[e.redirection=1]="redirection",e[e.unkownCmd=2]="unkownCmd",e[e.pipeExecutorHalt=3]="pipeExecutorHalt",e[e.explicitUndefined=4]="explicitUndefined"}(specialTypes||(specialTypes={}));let internalArgsList=["-t"];function smartArgs(e){let o=e[0],t=e.slice(1),s=[],n=[],i=[],r=[],a=!legacyData.pipes;for(let l of t)"string"==typeof l?(internalArgsList.includes(l)?(r.push(l),"-t"===l&&(a||=!0)):s.push(l),l.length>0&&"-"===l[0]?n.push(l.slice(1)):i.push(l)):(s.push(l),n.push(l));let c=n.join("");return{name:o,commandName:o,args:s,array:e,orginal:e,orginalLength:e.length,internalArgs:r,internal:r,isEnding:a,length:s.length,dashed:n,argsWithDash:n,dashCombined:c,argsWithoutDash:i,[Symbol.iterator](){let e=0;return{next:()=>e<s.length?{value:s[e++],done:!1}:{done:!0}}},[Symbol.toStringTag]:()=>`smartArgs{${o}(\`${t.join(" ")}\`)}`,[g.custom]:(e,s,n)=>`smartArgs{${o}(\`${n(t,s)}\`)}`}}function commandInternalExec(e,o=!1,t="console",s=!1){o||log(LogType.INFO,`This command has been executed: '${e}'`,t);let n;if(legacyData.pipes){let i=commandDividerInternal(e);n=pipeExecutor(i,{silent:o,logNode:t})}else{let r=e.split(" "),a;n=handleCommandInternal(a=legacyData.noSpecialArguments?r:[r[0],"-t",...r.slice(1)],o,t)}if(s)return n;if(isExplicitUndefined(n))consoleWrite("undefined",void 0,void 0);else if(void 0!=n){if(isOnlyToRedirect(n))return;let l=tryToGetAsStringToPrint(n,!0);consoleWrite(l,void 0,void 0,"")}}function tryToGetAsStringToPrint(e,o=!1){let t;switch(typeof e){case"string":t=e;break;default:if(isOnlyToRedirect(e)){t=e.val;break}t=g(e,!0,null,o)}return t+"\n"}!function(e){e[e.unkown=0]="unkown",e[e.fileFrom=1]="fileFrom",e[e.command=2]="command",e[e.fileSet=3]="fileSet",e[e.fileAppend=4]="fileAppend",e[e.and=5]="and",e[e.or=6]="or",e[e.pipe=7]="pipe",e[e.dataClear=8]="dataClear"}(pipeType||(pipeType={}));let specialChars=[">","<"],commandParsingStop=["|","&",";"];function commandDividerInternal(e){if(0==e.length)return[];let o=[],t=0;for(;t<e.length;){let[s,n]=pipeDividerInternal(e,t);for(o.push(...n),t=s;e.length>t&&" "==e[t];)t++;if(!(t<e.length))break;switch(e[t]){case"|":if(++t<e.length&&"|"===e[t]){o.push({type:pipeType.or,val:void 0}),t++;break}o.push({type:pipeType.pipe,val:void 0});break;case";":t++,o.push({type:pipeType.dataClear,val:void 0});break;case"&":if(++t<e.length&&"&"===e[t]){o.push({type:pipeType.and,val:void 0}),t++;break}default:throw Error("unexpected token: "+e[t])}}return o}function getFileDesc(e,o){let t="";for(;e<o.length&&" "!=o[e]&&!specialChars.includes(o[e])&&!commandParsingStop.includes(o[e]);)t+=o[e],e++;return[e,t]}function pipeDividerInternal(e,o){let t=[],s="",n=o;for(;n<e.length;n++){if("\\"==e[n]&&[...specialChars,...commandParsingStop].includes(e[n+1])){if(!(++n<e.length))break;s+=e[n];continue}if(specialChars.includes(e[n])||commandParsingStop.includes(e[n]))break;s+=e[n]}if(s=s.trim(),t.push({type:pipeType.command,val:s}),!(n<e.length)||!specialChars.includes(e[n])||commandParsingStop.includes(e[n]))return[n,t];let i=!0;for(;n<e.length&&i;){for(;n<e.length&&" "==e[n];)n++;let r="";switch(e[++n-1]){case"<":[n,r]=getFileDesc(n,e),t.push({type:pipeType.fileFrom,val:r});break;case">":let a=">"==e[n];a&&n++,[n,r]=getFileDesc(n,e),t.push({type:a?pipeType.fileAppend:pipeType.fileSet,val:r});break;default:n--,i=!1}}return[n,t=t.sort((e,o)=>e.type-o.type)]}function internalIsTrue(e){switch(typeof e){case"boolean":return e;case"bigint":case"function":case"number":case"object":case"string":case"symbol":return!0;default:return!1}}function pipeExecutor(e,o={}){let s={silent:!1,logNode:"console"};Object.assign(s,o);let n=!1,i;for(let a=0;a<e.length;a++){let l=e[a];if(n){for(;a<e.length&&e[a].type!==pipeType.dataClear;)a++;if(n=!1,!(a<e.length))return}switch(l.type){case pipeType.fileFrom:i=r(d(process.cwd(),l.val));break;case pipeType.fileAppend:{let u=i;Array.isArray(u)&&1===u.length&&(u=u[0]),"string"==typeof u||u instanceof Uint8Array||(u=Buffer.of(u)),t(d(process.cwd(),l.val),u);break}case pipeType.fileSet:{let g=i;Array.isArray(g)&&1===g.length&&(g=g[0]),"string"==typeof g||g instanceof Uint8Array||(g=Buffer.of(g)),c(d(process.cwd(),l.val),g);break}case pipeType.dataClear:i=void 0,n=!1;break;case pipeType.command:{let m=l.val,h=m.split(" "),p=[h[0]];!legacyData.noSpecialArguments&&(a===e.length-1||a+1<e.length&&e[a+1].type===pipeType.dataClear)&&p.push("-t"),p.push(...h.slice(1)),Array.isArray(i)?p.push(...i):void 0!==i&&p.push(i);let f=handleCommandInternal(p,s.silent,s.logNode);if(isControlType(f)){if(isOnlyToRedirect(f)&&a!==e.length-1)i=f.val;else if(isPipeHalt(f))n=!0;else{if(!isExplicitUndefined(f))return;i=f}}else i=f;break}case pipeType.pipe:break;case pipeType.and:if(!internalIsTrue(i))return i;break;case pipeType.or:if(internalIsTrue(i))return i}}return i}function handleCommandInternal(e,o=!1,t="console"){if(Object.hasOwn(commands,e[0]))try{let s=commands[e[0]],n;if(s.isAlias){if(!(n=commands[s.aliasName]))throw new logSystemError("invalid alias");if(!n.async)return n.callback(e)}else n=s;let i=n;if(n.async)return i.callback(e),!0;return i.callback(e)}catch(r){return log(LogType.ERROR,"The error has occured during the command execution:\n"+formatError(r),t),{__$special:specialTypes.pipeExecutorHalt}}else if(e[0]in bindInfo){let a=bindInfo[e[0]];try{return commandInternalExec(a.command,!0,t,!0)}catch(l){return log(LogType.ERROR,"The error has occured during the bind execution:\n"+formatError(l),t),{__$special:specialTypes.pipeExecutorHalt}}}else{if(o||log(LogType.ERROR,`unknown command '${e[0]}'`,t),!legacyData.pipes)return;return{__$special:specialTypes.pipeExecutorHalt}}}function globalEval(e){return globalThis.eval.apply(globalThis,[e])}function resolveLogType(e){switch(e){case LogType.SUCCESS:return"SUCCESS";case LogType.ERROR:return"ERROR";case LogType.INFO:return"INFO";case LogType.WARNING:return"WARNING";case LogType.COUNTER:return"COUNTER";case LogType.INIT:return"INIT";case LogType.CRASH:return"CRASH";case LogType.GROUP:return"GROUP";default:return"UNKNOWN"}}function resolveLogColor(e){switch(e){case LogType.SUCCESS:return colorTable.success;case LogType.ERROR:return colorTable.error;case LogType.INFO:return colorTable.info;case LogType.WARNING:return colorTable.warning;case LogType.COUNTER:return colorTable.counter;case LogType.INIT:return colorTable.init;case LogType.CRASH:return colorTable.crash;case LogType.GROUP:return colorTable.group;default:return consoleColors.Reset}}function log(e,o,s="core"){if(blockLogsVar)return;"object"==typeof s&&(s=s.toString());let n=new Date,i=`${n.getHours()}:${n.getMinutes()}:${n.getSeconds()}:${n.getMilliseconds()}`,r=resolveLogType(e),a=resolveLogColor(e),l=`${i} ${r} ${s}: ${currentGroupString}${o}
`,c=`${colorTable.date}${i}${consoleColors.Reset} ${r} ${colorTable.who}${s}${consoleColors.Reset}: ${consoleColors.FgGray}${currentGroupString}${consoleColors.Reset}${a}${o}${consoleColors.Reset}
`;viewTextBox&&(process.stdout.clearLine(0),process.stdout.write(consoleColors.Reset+"\r")),process.stdout.write(c),t(finalLatest,l),viewTextBox&&process.stdout.write("\r\x1b[0m> \x1b[35m"+text)}let formatError=e=>"object"==typeof e&&Object.hasOwn(e,"stack")?e.stack:e;function assertConsole(e,o,t="core"){e||log(LogType.ERROR,o,t)}function clearConsole(){process.stdout.cursorTo(0,0),process.stdout.clearScreenDown(),viewTextBox&&process.stdout.write("\x1b[0m> \x1b[35m"+text)}let counterTable={};function counterCount(e,o=1,t=1,s){return Object.hasOwn(counterTable,e)?counterTable[e]+=t:counterTable[e]=o,log(LogType.COUNTER,`${e} -> ${counterTable[e]}`,s),counterTable[e]}function counterCountReset(e){Object.hasOwn(counterTable,e)&&delete counterTable[e]}function getCounter(e){return counterTable[e]?counterTable[e]:void 0}function printViewTextbox(){process.stdout.write("\x1b[0m> \x1b[35m"+text)}function consoleUltraRawWrite(e,o=!0){process.stdout.write(e),!0===o?t(finalLatest,e):!1!==o&&t(finalLatest,o)}function consoleWrite(e,o=consoleColors.Reset,s=!0,n="\n"){Array.isArray(o)&&(o=o.reduce((e,o)=>e+o)),viewTextBox&&(process.stdout.clearLine(0),process.stdout.write("\r")),process.stdout.write(o+e+"\x1b[0m"+n),s&&t(finalLatest,m(e)+n),viewTextBox&&printViewTextbox()}function combineColors(...e){let o="";for(let t of e)o+=t;return o}function consolePairWrite(e,o){viewTextBox&&(process.stdout.clearLine(0),process.stdout.write("\r"),process.stdout.write(consoleColors.Reset)),process.stdout.write(o),t(finalLatest,e),viewTextBox&&printViewTextbox()}function consoleMultiWrite(e,o,s=!0,n=""){if(e.length!==o.length)throw new logSystemError("Text array length and colors array length dont match!"+e.toString()+" vs "+o.toString());let i="",r="";for(let a in e)i+=e[a],r+=o[a]+e[a]+consoleColors.Reset;viewTextBox&&(process.stdout.clearLine(0),process.stdout.write("\r"),process.stdout.write(consoleColors.Reset)),process.stdout.write(r+n),s&&t(finalLatest,i+n),viewTextBox&&printViewTextbox()}function multiPairDisplayerCreate(e,o){return[e,o]}class multiDisplayer{texts=[];colors=[];constructor(){}push(e,o){this.texts.push(e),o?this.colors.push(o):this.colors.push("")}unshift(e,o){this.texts.unshift(e),o?this.colors.unshift(o):this.colors.unshift("")}pop(){return[this.texts.pop(),this.colors.pop()]}shift(){return[this.texts.shift(),this.colors.shift()]}toRawString(){return this.texts.join("")}useConsoleWrite(e=!0,o=!0){void 0===e&&(e=!0),consoleMultiWrite(this.texts,this.colors,e),o&&(this.texts=[],this.colors=[])}clear(){this.texts=[],this.colors=[]}}function generateAnsiColor(e,o,t){return`\u001b[38;2;${e};${o};${t}m`}!function(e){e.Reset="\x1b[0m",e.Bright="\x1b[1m",e.Dim="\x1b[2m",e.Underscore="\x1b[4m",e.Blink="\x1b[5m",e.Reverse="\x1b[7m",e.Hidden="\x1b[8m",e.FgBlack="\x1b[30m",e.FgRed="\x1b[31m",e.FgGreen="\x1b[32m",e.FgYellow="\x1b[33m",e.FgBlue="\x1b[34m",e.FgMagenta="\x1b[35m",e.FgCyan="\x1b[36m",e.FgWhite="\x1b[37m",e.FgGray="\x1b[90m",e.BgBlack="\x1b[40m",e.BgRed="\x1b[41m",e.BgGreen="\x1b[42m",e.BgYellow="\x1b[43m",e.BgBlue="\x1b[44m",e.BgMagenta="\x1b[45m",e.BgCyan="\x1b[46m",e.BgWhite="\x1b[47m",e.BgGray="\x1b[100m"}(consoleColors||(consoleColors={}));let colorTable={info:consoleColors.FgWhite,warning:consoleColors.FgYellow,error:consoleColors.FgRed,success:consoleColors.FgGreen,counter:consoleColors.FgCyan,init:consoleColors.FgWhite,crash:consoleColors.FgRed,group:consoleColors.FgGray,date:consoleColors.FgGray,who:consoleColors.FgMagenta};function blockLogs(e){return"boolean"==typeof e&&(blockLogsVar=e),blockLogsVar}function textboxVisibility(e){return"boolean"==typeof e&&(viewTextBox=e),!1===e?(process.stdout.clearLine(0),process.stdout.write("\r")):!0===e&&process.stdout.write("\x1b[0m> \x1b[35m"+text),viewTextBox}function formatTaskError(e,o){return`The error with the task: '${e}'. The error message:
${formatError(o)}
`}function useWith(e,o,t="core",s=!1){log(LogType.INFO,e,t);try{let n=o();return s||log(LogType.SUCCESS,e,t),n}catch(i){return s||log(LogType.ERROR,formatTaskError(e,i),t),i}}class logNode{name;parent;constructor(e,o){this.name=e,this.parent}getParent(){return this.parent}toString(){let e="",o=this;for(;o;)e=o.name+"."+e,o=o.getParent();return e.slice(0,e.length-1)}}function actualCrash(e,o,t){newConsole.crash(e,o),process.exit(t)}function versionInfo(e){return void 0!==e&&(getversionInfoData=e),getversionInfoData()}function getCurrentVersionOfLogSystem(e="string"){return"string"===e?String("1.2"):"number"===e?Number("1.2"):-1}function logGroup(e,o={}){if(!("messageVisible"in o)||o.messageVisible){let t=o.messageWho?o.messageWho:void 0;log(LogType.GROUP,e,t)}return logGroups.push(e),reconstructLogGroup()}function logGroupEnd(e={}){if(0===logGroups.length){if("error"in e&&e.error)throw new logSystemError("there's no group");return currentGroupString}return logGroups.pop(),reconstructLogGroup()}function reconstructLogGroup(){currentGroupString="";for(let e=0;e<logGroups.length;e++)currentGroupString+=singleLogGroupText;return 0!==logGroups.length&&(currentGroupString+=lastLogGroupText+" "),currentGroupString}function logTimeStart(e,o={}){let t=Date.now();if(timers[e]=t,!("messageVisible"in o)||o.messageVisible){let s=o.messageWho?o.messageWho:void 0;log(LogType.GROUP,`timer '${e}' started`,s)}return t}function logTimeEnd(e,o={}){if(!(e in timers)&&"error"in o&&o.error)throw new logSystemError("there's no timer with that name");let t=Date.now()-timers[e];if(delete timers[e],!("messageVisible"in o)||o.messageVisible){let s=o.messageWho?o.messageWho:void 0;log(LogType.GROUP,`timer '${e}' ended. ${t}ms`,s)}return t}function logTimeStamp(e,o={}){if(!(e in timers)&&"error"in o&&o.error)throw new logSystemError("there's no timer with that name");let t=Date.now()-timers[e];if(!("messageVisible"in o)||o.messageVisible){let s=o.messageWho?o.messageWho:void 0;log(LogType.GROUP,`timer '${e}' stamp: ${t}ms`,s)}return t}let inspectDefaultBehaviourForConsole={colors:!0},formatMultiData=(...e)=>e.map(e=>{g(e,inspectDefaultBehaviourForConsole)}).join(" "),compatibleLog=(...e)=>{log(LogType.INFO,formatMultiData(e))},aliasCache={};function createAliasCache(e){if(!(e in commands))throw Error("that command doesnt exist!");let o=[];for(let[t,s]of Object.entries(commands))s.isAlias&&s.aliasName===e&&o.push(t);aliasCache[e]=o}function getAliases(e){return e in aliasCache||createAliasCache(e),aliasCache[e]}let newConsole={log:(e,o="core")=>log(LogType.INFO,e,o),debug:(e,o="core")=>log(LogType.INFO,e,o),formatError,commandInterface,commands:commandInterface,LogType,logThis:log,print:log,write:consoleWrite,writeRaw:consoleWrite,info:(e,o="core")=>log(LogType.INFO,e,o),error:(e,o="core")=>log(LogType.ERROR,e,o),crash:(e,o="core")=>log(LogType.CRASH,e,o),warn:(e,o="core")=>log(LogType.WARNING,e,o),warning:(e,o="core")=>log(LogType.WARNING,e,o),init:(e,o="core")=>log(LogType.INIT,e,o),success:(e,o="core")=>log(LogType.SUCCESS,e,o),assert:assertConsole,clear:clearConsole,counters:counterTable,count:counterCount,countReset:counterCountReset,getCounter,colors:consoleColors,blockLogs,textboxVisibility,useWith,formatTaskError,actualCrash,ace:actualCrash,acrash:actualCrash,versionInfo,showCursor,hideCursor,getCurrentVersionOfLogSystem,combineColors,group:logGroup,logGroup,groupEnd:logGroupEnd,logGroupEnd,groupCollapsed:logGroup,time:logTimeStart,logTimeStart,timeEnd:logTimeEnd,logTimeEnd,timeStamp:logTimeStamp,logTimeStamp};function interupHandler(e="INTERUP (i guess?)"){textboxVisibility(!1),actualCrash(`The execution was manually stopped by ${e}!`,"core",-1)}function replaceConsole(){Object.assign(globalThis,{console:newConsole,orginalConsole:globalThis.console,newConsole})}function keepProcessAlive(e=20){(async()=>{for(;;)await new Promise(o=>setTimeout(o,e))})()}function multiLineConstructor(...e){return e.join("\n")}function processRestart(){newConsole.warn("It may not work!"),o(d(__dirname,__filename),{stdio:"overlapped"}),process.kill(0)}process.addListener("SIGINT",()=>interupHandler("INTERUP (SIGINT)")),process.addListener("exit",()=>{viewTextBox=!1,consoleWrite("",consoleColors.Reset,!1)}),process.addListener("uncaughtException",e=>{newConsole.crash("process uncaughtException: "+formatError(e)),process.exit(-1)}),process.addListener("message",e=>{newConsole.log("The main process has received a message: "+e)}),process.addListener("warning",e=>{newConsole.warn("process warning: "+formatError(e)),process.exit(-1)});{let y=new multiDisplayer;y.push("Log system has been properly loaded!\n",consoleColors.FgGreen),y.push("......................",combineColors(consoleColors.BgGray,consoleColors.FgGray)),y.push("\n\n"),y.push("Welcome to the log system v1.2 ",consoleColors.FgCyan),y.push("by Naticzka\n",combineColors(consoleColors.FgMagenta,consoleColors.Blink)),y.push("\n"),y.push("......................",combineColors(consoleColors.BgGray,consoleColors.FgGray)),y.push("\n"),y.push("start using it by writting 'help' or '?'\n"),y.useConsoleWrite(!1)}export{LogType,log,formatError,clearConsole,consoleWrite,assertConsole,consoleColors,blockLogs,registerCommand,removeCommand,commandList,isCommandRegistered,counterCount,counterCountReset,newConsole as console,newConsole,blankCallback,logSystemError,commands,useWith,useWith as uw,formatTaskError as fte,formatTaskError,logNode,actualCrash,globalEval,replaceConsole,keepProcessAlive,showCursor,hideCursor,consoleMultiWrite,multiDisplayer,getCurrentVersionOfLogSystem,registerCommandLegacy,registerCommandLegacyForceUse,multiCommandRegister,registerCommandShort,combineColors,validateLegacyProperty,setLegacyInformation,getLegacyInformation,logGroup as group,logGroup,logGroupEnd as groupEnd,logGroupEnd,logGroup as groupCollapsed,logTimeStart as time,logTimeStart,logTimeEnd as timeEnd,logTimeEnd,logTimeStamp as timeStamp,logTimeStamp,pipeDividerInternal,commandDividerInternal,pipeExecutor,consoleUltraRawWrite,multiLineConstructor,smartArgs,generateAnsiColor,consolePairWrite,printViewTextbox};